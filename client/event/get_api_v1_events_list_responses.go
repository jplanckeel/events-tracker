// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jplanckeel/events-tracker/models"
)

// GetAPIV1EventsListReader is a Reader for the GetAPIV1EventsList structure.
type GetAPIV1EventsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1EventsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1EventsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1EventsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/events/list] GetAPIV1EventsList", response, response.Code())
	}
}

// NewGetAPIV1EventsListOK creates a GetAPIV1EventsListOK with default headers values
func NewGetAPIV1EventsListOK() *GetAPIV1EventsListOK {
	return &GetAPIV1EventsListOK{}
}

/*
GetAPIV1EventsListOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV1EventsListOK struct {
	Payload []*models.ServicesEventOutput
}

// IsSuccess returns true when this get Api v1 events list o k response has a 2xx status code
func (o *GetAPIV1EventsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 events list o k response has a 3xx status code
func (o *GetAPIV1EventsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 events list o k response has a 4xx status code
func (o *GetAPIV1EventsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 events list o k response has a 5xx status code
func (o *GetAPIV1EventsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 events list o k response a status code equal to that given
func (o *GetAPIV1EventsListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 events list o k response
func (o *GetAPIV1EventsListOK) Code() int {
	return 200
}

func (o *GetAPIV1EventsListOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/events/list][%d] getApiV1EventsListOK  %+v", 200, o.Payload)
}

func (o *GetAPIV1EventsListOK) String() string {
	return fmt.Sprintf("[GET /api/v1/events/list][%d] getApiV1EventsListOK  %+v", 200, o.Payload)
}

func (o *GetAPIV1EventsListOK) GetPayload() []*models.ServicesEventOutput {
	return o.Payload
}

func (o *GetAPIV1EventsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1EventsListBadRequest creates a GetAPIV1EventsListBadRequest with default headers values
func NewGetAPIV1EventsListBadRequest() *GetAPIV1EventsListBadRequest {
	return &GetAPIV1EventsListBadRequest{}
}

/*
GetAPIV1EventsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV1EventsListBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get Api v1 events list bad request response has a 2xx status code
func (o *GetAPIV1EventsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 events list bad request response has a 3xx status code
func (o *GetAPIV1EventsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 events list bad request response has a 4xx status code
func (o *GetAPIV1EventsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 events list bad request response has a 5xx status code
func (o *GetAPIV1EventsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 events list bad request response a status code equal to that given
func (o *GetAPIV1EventsListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 events list bad request response
func (o *GetAPIV1EventsListBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1EventsListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/events/list][%d] getApiV1EventsListBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV1EventsListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/events/list][%d] getApiV1EventsListBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV1EventsListBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetAPIV1EventsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
